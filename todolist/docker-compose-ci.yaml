version: '3.10'

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      - db

  postgres:
    image: postgres:13.0-alpine
    env_file:
      - .env
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_NAME}
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - backend_nm
    volumes:
      - ./pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    image: 725311/todolist:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
#    depends_on:
#      db:
#        condition: service_healthy
#    ports:
#      - "8000:8000"
#    volumes:
#      - ./.env:/code/.env

    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"

volumes:
  pg_data_todolist:

networks:
  backend_nm:
    driver: bridge