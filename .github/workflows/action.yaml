name: CI
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: |
          cd todolist
          docker build . -t ${{ secrets.DOCKER_USERNAME }}/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID -f Dockerfile
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      SECRET_KEY: "${{ secrets.SECRET_KEY }}"
      DEBUG: ${DEBUG}
#      DEBUG: ${{ secrets.DEBUG }}
      DB_ENGINE: ${DB_ENGINE}
#      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
#      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
#      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      API_PORT: ${API_PORT}
#      API_PORT: ${{ secrets.API_PORT }}
    steps:
    - name: clone code
      uses: actions/checkout@v2
    - name: render configs
      run: | 
        mkdir deploy
        cat todolist/docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
        cat todolist/.env.ci | envsubst > deploy/.env
#        env
#        cat deploy/docker-compose.yaml
    - name: copy files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        source: "deploy/docker-compose.yaml, deploy/.env"
        target: "todolist"
        strip_components: 1
    - name: deploy app
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd todolist
          docker-compose up -d
#          echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d
